[gd_scene load_steps=5 format=3 uid="uid://cyao240wa3o1y"]

[ext_resource type="Script" path="res://scene/levels/levelexample2.gd" id="1_oqb64"]
[ext_resource type="Texture2D" uid="uid://clga6nlwq6x10" path="res://assets/graphics/background/openroom(withoutkey).jpg" id="2_8jf0j"]
[ext_resource type="Texture2D" uid="uid://d3mqqfv14yfum" path="res://assets/graphics/background/openroom.png" id="3_d7oal"]

[sub_resource type="GDScript" id="GDScript_p4p2w"]
resource_name = "keyitem"
script/source = "extends TextureButton


# Called when the node enters the scene tree for the first time.
func _ready():
	if \"debug_key\" in Inventory.current_items: # Checks if item is already in person.
		queue_free()


# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta):
	pass
"

[node name="LevelExample" type="Node"]
script = ExtResource("1_oqb64")

[node name="TextureRect" type="TextureRect" parent="."]
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
offset_left = -1.52588e-05
offset_right = 320.0
offset_bottom = 180.0
grow_horizontal = 2
grow_vertical = 2
scale = Vector2(0.835, 0.835)
texture = ExtResource("2_8jf0j")

[node name="OpenDoor" type="Area2D" parent="."]

[node name="OpenDoorCollision" type="CollisionPolygon2D" parent="OpenDoor"]
position = Vector2(64, 88)
polygon = PackedVector2Array(0, 0, 156, 12, 171, 439, 8, 488)

[node name="ClosedDoor" type="Area2D" parent="."]

[node name="ClosedDoorCollision" type="CollisionPolygon2D" parent="ClosedDoor"]
position = Vector2(739, 115)
polygon = PackedVector2Array(-11, -5, 544, -6, 531, 454, -10, 426)

[node name="Key" type="TextureButton" parent="."]
offset_top = 746.0
offset_right = 630.0
offset_bottom = 936.0
scale = Vector2(0.833, 0.833)
focus_mode = 0
texture_normal = ExtResource("3_d7oal")
script = SubResource("GDScript_p4p2w")

[node name="Line2D" type="Line2D" parent="."]
points = PackedVector2Array(729, 106, 1284, 117, 1269, 571, 727, 541, 730, 105)
width = 5.0
antialiased = true

[connection signal="input_event" from="OpenDoor" to="." method="_on_open_door_input_event"]
[connection signal="input_event" from="ClosedDoor" to="." method="_on_closed_door_input_event"]
[connection signal="pressed" from="Key" to="." method="_on_key_pressed"]
